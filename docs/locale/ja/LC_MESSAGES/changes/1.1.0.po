# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019 Falcon Contributors
# This file is distributed under the same license as the Falcon package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Falcon 1.4dev1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-06 19:36+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../changes/1.1.0.rst:2
msgid "Changelog for Falcon 1.1.0"
msgstr ""

#: ../../changes/1.1.0.rst:5
msgid "Breaking Changes"
msgstr ""

#: ../../changes/1.1.0.rst:7
msgid "(None)"
msgstr ""

#: ../../changes/1.1.0.rst:10
msgid "New & Improved"
msgstr ""

#: ../../changes/1.1.0.rst:12
msgid ""
"A new `bounded_stream` property was added to :class:`falcon.Request` that"
" can be used in place of the `stream` property to mitigate the blocking "
"behavior of input objects used by some WSGI servers."
msgstr ""

#: ../../changes/1.1.0.rst:15
msgid ""
"A new `uri_template` property was added to :class:`~falcon.Request` to "
"expose the template for the route corresponding to the path requested by "
"the user agent."
msgstr ""

#: ../../changes/1.1.0.rst:18
msgid ""
"A `context` property was added to :class:`~falcon.Response` to mirror the"
" same property that is already available for :class:`~falcon.Request`."
msgstr ""

#: ../../changes/1.1.0.rst:21
msgid ""
"JSON-encoded query parameter values can now be retrieved and decoded in a"
" single step via :meth:`~falcon.Request.get_param_as_dict`."
msgstr ""

#: ../../changes/1.1.0.rst:23
msgid "CSV-style parsing of query parameter values can now be disabled."
msgstr ""

#: ../../changes/1.1.0.rst:24
msgid ""
":meth:`~falcon.Request.get_param_as_bool` now recognizes \"on\" and "
"\"off\" in support of IE's default checkbox values."
msgstr ""

#: ../../changes/1.1.0.rst:26
msgid ""
"An `accept_ranges` property was added to :class:`~falcon.Response` to "
"facilitate setting the Accept-Ranges header."
msgstr ""

#: ../../changes/1.1.0.rst:28
msgid ""
"Added the :class:`~falcon.HTTPUriTooLong` and :class:`~falcon.HTTPGone` "
"error classes."
msgstr ""

#: ../../changes/1.1.0.rst:30
msgid ""
"When a title is not specified for :class:`~falcon.HTTPError`, it now "
"defaults to the HTTP status text."
msgstr ""

#: ../../changes/1.1.0.rst:32
msgid "All parameters are now optional for most error classes."
msgstr ""

#: ../../changes/1.1.0.rst:33
msgid "Cookie-related documentation has been clarified and expanded"
msgstr ""

#: ../../changes/1.1.0.rst:34
msgid ""
"The :class:`falcon.testing.Cookie` class was added to represent a cookie "
"returned by a simulated request. :class:`falcon.testing.Result` now "
"exposes a `cookies` attribute for examining returned cookies."
msgstr ""

#: ../../changes/1.1.0.rst:37
msgid ""
"pytest support was added to Falcon's testing framework. Apps can now "
"choose to either write unittest- or pytest-style tests."
msgstr ""

#: ../../changes/1.1.0.rst:39
msgid "The test runner for Falcon's own tests was switched from nose to pytest."
msgstr ""

#: ../../changes/1.1.0.rst:41
msgid ""
"When simulating a request using Falcon's testing framework, query string "
"parameters can now be specified as a :class:`dict`, as an alternative to "
"passing a raw query string."
msgstr ""

#: ../../changes/1.1.0.rst:44
msgid ""
"A flag is now passed to the `process_request` middleware method to signal"
" whether or not an exception was raised while processing the request. A "
"shim was added to avoid breaking existing middleware methods that do not "
"yet accept this new parameter."
msgstr ""

#: ../../changes/1.1.0.rst:48
msgid ""
"A new CLI utility, `falcon-print-routes`, was added that takes in a "
"module:callable, introspects the routes, and prints the results to "
"stdout. This utility is automatically installed along with the "
"framework::"
msgstr ""

#: ../../changes/1.1.0.rst:59
msgid ""
"Custom attributes can now be attached to instances of "
":class:`~falcon.Request` and :class:`~falcon.Response`. This can be used "
"as an alternative to adding values to the `context` property, or "
"implementing custom subclasses."
msgstr ""

#: ../../changes/1.1.0.rst:63
msgid ""
":meth:`~falcon.get_http_status` was implemented to provide a way to look "
"up a full HTTP status line, given just a status code."
msgstr ""

#: ../../changes/1.1.0.rst:67
msgid "Fixed"
msgstr ""

#: ../../changes/1.1.0.rst:69
msgid ""
"When :any:`auto_parse_form_urlencoded` is set to ``True``, the framework "
"now checks the HTTP method before attempting to consume and parse the "
"body."
msgstr ""

#: ../../changes/1.1.0.rst:72
msgid ""
"Before attempting to read the body of a form-encoded request, the "
"framework now checks the Content-Length header to ensure that a non-empty"
" body is expected. This helps prevent bad requests from causing a "
"blocking read when running behind certain WSGI servers."
msgstr ""

#: ../../changes/1.1.0.rst:76
msgid ""
"When the requested method is not implemented for the target resource, the"
" framework now raises :class:`~falcon.HTTPMethodNotAllowed`, rather than "
"modifying the :class:`~falcon.Request` object directly. This improves "
"visibility for custom error handlers and for middleware methods."
msgstr ""

#: ../../changes/1.1.0.rst:81
msgid "Error class docstrings have been updated to reflect the latest RFCs."
msgstr ""

#: ../../changes/1.1.0.rst:82
msgid ""
"When an error is raised by a resource method or a hook, the error will "
"now always be processed (including setting the appropriate properties of "
"the :class:`~falcon.Response` object) before middleware methods are "
"called."
msgstr ""

#: ../../changes/1.1.0.rst:86
msgid ""
"A case was fixed in which middleware processing did not continue when an "
"instance of :class:`~falcon.HTTPError` or :class:`~falcon.HTTPStatus` was"
" raised."
msgstr ""

#: ../../changes/1.1.0.rst:89
msgid ""
"The :meth:`~falcon.uri.encode` method will now attempt to detect whether "
"the specified string has already been encoded, and return it unchanged if"
" that is the case."
msgstr ""

#: ../../changes/1.1.0.rst:92
msgid ""
"The default OPTIONS responder now explicitly sets Content-Length to zero "
"in the response."
msgstr ""

#: ../../changes/1.1.0.rst:94
msgid ""
":class:`falcon.testing.Result` now assumes that the response body is "
"encoded as UTF-8 when the character set is not specified, rather than "
"raising an error when attempting to decode the response body."
msgstr ""

#: ../../changes/1.1.0.rst:97
msgid ""
"When simulating requests, Falcon's testing framework now properly tunnels"
" Unicode characters through the WSGI interface."
msgstr ""

#: ../../changes/1.1.0.rst:99
msgid ""
"``import falcon.uri`` now works, in addition to ``from falcon import "
"uri``."
msgstr ""

#: ../../changes/1.1.0.rst:101
msgid ""
"URI template fields are now validated up front, when the route is added, "
"to ensure they are valid Python identifiers. This prevents cryptic errors"
" from being raised later on when requests are routed."
msgstr ""

#: ../../changes/1.1.0.rst:104
msgid ""
"When running under Python 3, :meth:`inspect.signature()` is used instead "
"of :meth:`inspect.getargspec()` to provide compatibility with annotated "
"functions."
msgstr ""

